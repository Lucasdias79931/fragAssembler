import os 


def getSec(directory: str):
    
    try:
        with open(directory, "r") as file:
            
            sequence = ""
            for line in file:
                if line.startswith(">"):
                    continue
                else:
                    sequence += line.strip()
            
            return sequence
            
            
            
            


    except FileExistsError as e:
        print("Erro:", e)
    except Exception as e:
        print(f"Erro inesperado:{e}")
        

def getCDS(directory: str):
    
    try:
        all = []
        with open(directory, "r") as file:
            
            
            for line in file:
                if line.startswith(">"):
                    continue
                else:
                    all.append(line.strip())
            
            return all
            
            
            
            
            


    except FileExistsError as e:
        print("Erro:", e)
    except Exception as e:
        print(f"Erro inesperado:{e}")








here = os.path.dirname(os.path.abspath(__file__))

CDS_path = os.path.join(here, "CDSsPreparados/cds.fasta")
CDSInCOM_path   = os.path.join(here, "CDSsPreparados/cdsInComplement.fasta")
sequence_path = os.path.join(here,"chromosome1HomoSapien/sequence.fasta" )
complement_path = os.path.join(here,"chromosome1HomoSapien/reversedSequence.fasta" )
complement =  str()
sequence = str()

CDSs = list()
CDSsIncom = list()




sequence = getSec(sequence_path)
complement = getSec(complement_path)

CDSs = getCDS(CDS_path)
CDSsIncom = getCDS(CDSInCOM_path)

#['c586955', '586839']
#['c601577', '601398']
#['c608056', '607955']
#['c610750', '609083']  


test = "ATGCGTAGACACACACATCCTTACTCTGCGCGCATCCCTGGCCTGGTGGACGGAAGATCGAGCGCTCTGGGTGGACTTACGGCCACAGGACGGGGGCAGAGTCGGCAGGGAGGCCCCTCCGAGGCCCAGTGGGCCCTGCGCTGGCCCCGGCCGCAGACGCCCACCTGCTGCTGTGCTGGCTGCGGCCGCCGCCTGCTGGCCACAGAGAGCCCACGTGCGCCGGCCGCCAGGCCTGGGCATCTCCCCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCACCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCTGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCACCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCTGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGTGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCACCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCTGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGTGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCTGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGCGCCGGCCGCCAGGCCTGGGCATCTCCTCTCCTGCAGCGCCGCCTGCTGGCCACAGAGAACCCGCGTGTGCCGGCCGCCAGGCCTGGGCATCTCCCCGGGCCCTAGTTCCCCCCCTCACCTAAGGGGAGGGACTCCCGTCTTTCCATCCACCCCCTCCTTGCCTCTGCAGAGCTCCAGGGAAGGCTGGCACCCGCTCACTGCATTTAGACTCCATCAGGTTCAGACAGTGGGTCAGGGTACAAGGCTTCAGCGGCCAGGGATGTGGCCTCTAATTTGTAGAGAGAAAGAAGGACAGAGGCAAAGGTTTGGGCCCAGGGACTGGGCTCCGTTTCCAGAATCACTCTTGGAGCTGCTCTGCTGCCCCCTGCCCCATACACGTGATGGAGCAGAAAACGTGCTGTGTGAACCTGTGACTTCAGGGCCTGTTGACGTGGTCGTGCTTGCATACTCTCTGGACTGGACCTCACTGTGGGAACAACAAGATCAACAAGAGGAGCAAGAACAACATCAAGAGTCAGGGCCCGGGGGTCCTGACGGGTACAGGATGGGTACAGACCCACACAGGAATCCCAGAGTGTGTTCCACAGCAGGACACGCCTGCGCTGAAAGAGTGGGCAGAAAGGAGCTGACCTGGACCAAACCAATGCACAACTCCTACGTACTGATGGTGGTCTTACGTTTCCCTAAGTTTCTGCCGACTAAACTGTGCACACGTTCTCAGGACCTCCTGAAGCTGCGTCACAGGCGCTGA"

other = "AGTCGCGGACACTGCGTCGAAGTCCTCCAGGACTCTTGCACACGTGTCAAATCAGCCGTCTTTGAATCCCTTTGCATTCTGGTGGTAGTCATGCATCCTCAACACGTAACCAAACCAGGTCCAGTCGAGGAAAGACGGGTGAGAAAGTCGCGTCCGCACAGGACGACACCTTGTGTGAGACCCTAAGGACACACCCAGACATGGGTAGGACATGGGCAGTCCTGGGGGCCCGGGACTGAGAACTACAACAAGAACGAGGAGAACAACTAGAACAACAAGGGTGTCACTCCAGGTCAGGTCTCTCATACGTTCGTGCTGGTGCAGTTGTCCGGGACTTCAGTGTCCAAGTGTGTCGTGCAAAAGACGAGGTAGTGCACATACCCCGTCCCCCGTCGTCTCGTCGAGGTTCTCACTAAGACCTTTGCCTCGGGTCAGGGACCCGGGTTTGGAAACGGAGACAGGAAGAAAGAGAGATGTTTAATCTCCGGTGTAGGGACCGGCGACTTCGGAACATGGGACTGGGTGACAGACTTGGACTACCTCAGATTTACGTCACTCGCCCACGGTCGGAAGGGACCTCGAGACGTCTCCGTTCCTCCCCCACCTACCTTTCTGCCCTCAGGGAGGGGAATCCACTCCCCCCCTTGATCCCGGGCCCCTCTACGGGTCCGGACCGCCGGCCGTGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGTCCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGTGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGTCCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCACGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGTGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGTCCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCACGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGTCCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCACGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCTCCTCTACGGGTCCGGACCGCCGGCCGCGTGCGCCCAAGAGACACCGGTCGTCCGCCGCGACGTCCTCCCCTCTACGGGTCCGGACCGCCGGCCGCGTGCACCCGAGAGACACCGGTCGTCCGCCGCCGGCGTCGGTCGTGTCGTCGTCCACCCGCAGACGCCGGCCCCGGTCGCGTCCCGGGTGACCCGGAGCCTCCCCGGAGGGACGGCTGAGACGGGGGCAGGACACCGGCATTCAGGTGGGTCTCGCGAGCTAGAAGGCAGGTGGTCCGGTCCCTACGCGCGTCTCATTCCTACACACACAGATGCGT"
"""
start = len(test)
end =   586955 - 586839

print(end)

sec = test[start: end]

if sec in complement:
    print(f"cds encontrado na fita complementar")
else:
    print(f"cds não encontrado na fita complemnetar")

exit(1)"""

for cds in CDSs:
    if cds in sequence:
        print(f"cds encontrado na fita comum")
    else:
        print(f"cds não encontrado na fita comum")


for cds in CDSsIncom:
    if cds in complement:
        print(f"cds  encontrado na fita complementar")
    else:
        print(f"cds não encontrado na fita complemnetar")



